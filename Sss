-- CoolMirror Full UI Example -- Place in a LocalScript (StarterPlayerScripts or StarterGui)
-- All text uses Bangers font. Fully PC/Mobile compatible. Theme changer, dropdown, toggle, slider, textbox.

local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local playerGui = Players.LocalPlayer:WaitForChild("PlayerGui")

-- THEMES
local themes = {
    Dark = {
        main = Color3.fromRGB(25,27,38),
        bar = Color3.fromRGB(40,42,60),
        content = Color3.fromRGB(28,28,36),
        accent = Color3.fromRGB(80,110,255),
        text = Color3.fromRGB(255,255,255),
        label = Color3.fromRGB(200,140,255),
        shadow = Color3.fromRGB(0,0,0)
    },
    Light = {
        main = Color3.fromRGB(236,237,243),
        bar = Color3.fromRGB(235,235,245),
        content = Color3.fromRGB(247,247,251),
        accent = Color3.fromRGB(110,160,255),
        text = Color3.fromRGB(40,44,60),
        label = Color3.fromRGB(120,90,240),
        shadow = Color3.fromRGB(0,0,0)
    }
}
local currentTheme = "Dark"

-- UI Helper
local function roundify(obj, rad)
    local c = Instance.new("UICorner")
    c.CornerRadius = rad or UDim.new(0, 10)
    c.Parent = obj
end

local function makeShadow(obj, z, col)
    local s = Instance.new("ImageLabel")
    s.Image = "rbxassetid://1316045217"
    s.BackgroundTransparency = 1
    s.ImageTransparency = 0.7
    s.ImageColor3 = col or Color3.fromRGB(0,0,0)
    s.ScaleType = Enum.ScaleType.Slice
    s.SliceCenter = Rect.new(10,10,118,118)
    s.Size = UDim2.new(1,18,1,18)
    s.Position = UDim2.new(0,-9,0,-9)
    s.ZIndex = (z or obj.ZIndex or 1) - 1
    s.Parent = obj
    return s
end

-- Main UI
local sg = Instance.new("ScreenGui")
sg.Name = "CoolMirrorDemoUI"
sg.Parent = playerGui
sg.ResetOnSpawn = false
sg.IgnoreGuiInset = true

local main = Instance.new("Frame")
main.Size = UDim2.new(0, 430, 0, 570)
main.Position = UDim2.new(0.5, -215, 0.5, -285)
main.BackgroundColor3 = themes.Dark.main
main.ZIndex = 10
main.Parent = sg
roundify(main)
makeShadow(main, 10, themes.Dark.shadow)

local layout = Instance.new("UIListLayout", main)
layout.FillDirection = Enum.FillDirection.Vertical
layout.HorizontalAlignment = Enum.HorizontalAlignment.Center
layout.VerticalAlignment = Enum.VerticalAlignment.Top
layout.Padding = UDim.new(0, 14)

-- Title
local titleBar = Instance.new("Frame")
titleBar.Size = UDim2.new(1, -28, 0, 56)
titleBar.BackgroundColor3 = themes.Dark.bar
titleBar.Parent = main
titleBar.ZIndex = 15
roundify(titleBar)

local title = Instance.new("TextLabel")
title.Size = UDim2.new(1, 0, 1, 0)
title.BackgroundTransparency = 1
title.Font = Enum.Font.Bangers
title.TextSize = 42
title.TextColor3 = themes.Dark.label
title.Text = "CoolMirror Example"
title.Parent = titleBar
title.ZIndex = 16

-- Theme Changer
local themeRow = Instance.new("Frame")
themeRow.Size = UDim2.new(1, -44, 0, 46)
themeRow.BackgroundTransparency = 1
themeRow.Parent = main

local themeLbl = Instance.new("TextLabel")
themeLbl.Size = UDim2.new(0.5, 0, 1, 0)
themeLbl.BackgroundTransparency = 1
themeLbl.Font = Enum.Font.Bangers
themeLbl.TextSize = 28
themeLbl.TextColor3 = themes.Dark.text
themeLbl.Text = "Theme"
themeLbl.TextXAlignment = Enum.TextXAlignment.Left
themeLbl.Parent = themeRow

local themeDrop = Instance.new("TextButton")
themeDrop.Size = UDim2.new(0, 132, 0, 36)
themeDrop.Position = UDim2.new(1, -140, 0.5, -18)
themeDrop.BackgroundColor3 = themes.Dark.bar
themeDrop.Text = currentTheme
themeDrop.Font = Enum.Font.Bangers
themeDrop.TextSize = 22
themeDrop.TextColor3 = themes.Dark.text
themeDrop.TextXAlignment = Enum.TextXAlignment.Left
themeDrop.Parent = themeRow
roundify(themeDrop, UDim.new(0,8))

local themeListFrame = Instance.new("Frame")
themeListFrame.Size = UDim2.new(1,0,0,2*28)
themeListFrame.Position = UDim2.new(0,0,1,2)
themeListFrame.BackgroundColor3 = themes.Dark.content
themeListFrame.Visible = false
themeListFrame.Parent = themeDrop
themeListFrame.ZIndex = 50
roundify(themeListFrame, UDim.new(0,8))

local ul = Instance.new("UIListLayout", themeListFrame)
ul.SortOrder = Enum.SortOrder.LayoutOrder
ul.Padding = UDim.new(0,2)

for themename, _ in pairs(themes) do
    local opt = Instance.new("TextButton")
    opt.Size = UDim2.new(1,0,0,26)
    opt.BackgroundColor3 = themes.Dark.accent
    opt.Text = themename
    opt.Font = Enum.Font.Bangers
    opt.TextSize = 20
    opt.TextColor3 = themes.Dark.text
    opt.Parent = themeListFrame
    roundify(opt, UDim.new(0,8))
    opt.MouseButton1Click:Connect(function()
        themeDrop.Text = themename
        themeListFrame.Visible = false
        local th = themes[themename]
        main.BackgroundColor3 = th.main
        titleBar.BackgroundColor3 = th.bar
        title.TextColor3 = th.label
        themeLbl.TextColor3 = th.text
        themeDrop.BackgroundColor3 = th.bar
        themeDrop.TextColor3 = th.text
        themeListFrame.BackgroundColor3 = th.content
        toggleLabel.TextColor3 = th.text
        toggleBtn.BackgroundColor3 = th.bar
        dropLabel.TextColor3 = th.text
        dropBtn.BackgroundColor3 = th.bar
        dropBtn.TextColor3 = th.text
        dropListFrame.BackgroundColor3 = th.content
        sliderLabel.TextColor3 = th.text
        sliderBar.BackgroundColor3 = th.accent
        txtLabel.TextColor3 = th.text
        txtBox.BackgroundColor3 = th.bar
        txtBox.TextColor3 = th.text
        txtBox.PlaceholderColor3 = th.label
        currentTheme = themename
        -- update shadow color
        makeShadow(main, 10, th.shadow)
    end)
    opt.TouchTap:Connect(function()
        opt.MouseButton1Click:Fire()
    end)
end
themeDrop.MouseButton1Click:Connect(function()
    themeListFrame.Visible = not themeListFrame.Visible
end)
themeDrop.TouchTap:Connect(function()
    themeListFrame.Visible = not themeListFrame.Visible
end)

-- Toggle
local toggleFrame = Instance.new("Frame")
toggleFrame.Size = UDim2.new(1, -44, 0, 46)
toggleFrame.BackgroundTransparency = 1
toggleFrame.Parent = main

local toggleLabel = Instance.new("TextLabel")
toggleLabel.Size = UDim2.new(0.7, 0, 1, 0)
toggleLabel.BackgroundTransparency = 1
toggleLabel.Font = Enum.Font.Bangers
toggleLabel.TextSize = 28
toggleLabel.TextColor3 = themes.Dark.text
toggleLabel.Text = "Enable Feature"
toggleLabel.TextXAlignment = Enum.TextXAlignment.Left
toggleLabel.Parent = toggleFrame

local toggleBtn = Instance.new("TextButton")
toggleBtn.Size = UDim2.new(0, 54, 0, 28)
toggleBtn.Position = UDim2.new(1, -64, 0.5, -14)
toggleBtn.AnchorPoint = Vector2.new(0,0)
toggleBtn.BackgroundColor3 = themes.Dark.bar
toggleBtn.Text = ""
toggleBtn.Parent = toggleFrame
roundify(toggleBtn, UDim.new(1,0))

local toggleCircle = Instance.new("Frame")
toggleCircle.Size = UDim2.new(0, 20, 0, 20)
toggleCircle.Position = UDim2.new(0, 4, 0.5, -10)
toggleCircle.BackgroundColor3 = Color3.fromRGB(255,255,255)
toggleCircle.Parent = toggleBtn
roundify(toggleCircle, UDim.new(1,0))

local toggled = false
local function updateToggle(inst)
    if toggled then
        TweenService:Create(toggleBtn, TweenInfo.new(0.15), {BackgroundColor3 = Color3.fromRGB(60, 170, 90)}):Play()
        TweenService:Create(toggleCircle, TweenInfo.new(0.15), {Position = UDim2.new(1, -24, 0.5, -10)}):Play()
    else
        TweenService:Create(toggleBtn, TweenInfo.new(0.15), {BackgroundColor3 = themes[currentTheme].bar}):Play()
        TweenService:Create(toggleCircle, TweenInfo.new(0.15), {Position = UDim2.new(0, 4, 0.5, -10)}):Play()
    end
end
toggleBtn.MouseButton1Click:Connect(function()
    toggled = not toggled
    updateToggle()
    print("Toggle:", toggled)
end)
toggleBtn.TouchTap:Connect(function()
    toggled = not toggled
    updateToggle()
    print("Toggle:", toggled)
end)
updateToggle(true)

-- Slider
local sliderRow = Instance.new("Frame")
sliderRow.Size = UDim2.new(1, -44, 0, 58)
sliderRow.BackgroundTransparency = 1
sliderRow.Parent = main

local sliderLabel = Instance.new("TextLabel")
sliderLabel.Size = UDim2.new(0.5, 0, 1, 0)
sliderLabel.BackgroundTransparency = 1
sliderLabel.Text = "Volume"
sliderLabel.Font = Enum.Font.Bangers
sliderLabel.TextSize = 28
sliderLabel.TextColor3 = themes.Dark.text
sliderLabel.TextXAlignment = Enum.TextXAlignment.Left
sliderLabel.Parent = sliderRow

local sliderBar = Instance.new("Frame")
sliderBar.Size = UDim2.new(0, 200, 0, 8)
sliderBar.Position = UDim2.new(0.5, 8, 0.5, 0)
sliderBar.BackgroundColor3 = themes.Dark.accent
sliderBar.Parent = sliderRow
roundify(sliderBar, UDim.new(1,0))

local sliderThumb = Instance.new("Frame")
sliderThumb.Size = UDim2.new(0, 24, 0, 24)
sliderThumb.Position = UDim2.new(0, 0, 0.5, -12)
sliderThumb.BackgroundColor3 = Color3.fromRGB(255,255,255)
sliderThumb.Parent = sliderRow
roundify(sliderThumb, UDim.new(1,0))
sliderThumb.ZIndex = 2

local sliderValLabel = Instance.new("TextLabel")
sliderValLabel.Size = UDim2.new(0, 68, 1, 0)
sliderValLabel.Position = UDim2.new(1, -68, 0, 0)
sliderValLabel.BackgroundTransparency = 1
sliderValLabel.Text = "50"
sliderValLabel.Font = Enum.Font.Bangers
sliderValLabel.TextColor3 = themes.Dark.text
sliderValLabel.TextSize = 26
sliderValLabel.Parent = sliderRow

local sliderMin, sliderMax, sliderVal = 0, 100, 50
local dragging = false
local function setSlider(percent, inst)
    percent = math.clamp(percent, 0, 1)
    local newVal = math.floor(sliderMin + (sliderMax - sliderMin) * percent + 0.5)
    sliderVal = newVal
    if inst then
        sliderThumb.Position = UDim2.new(percent, -12, 0.5, -12)
    else
        TweenService:Create(sliderThumb, TweenInfo.new(0.14), {Position = UDim2.new(percent, -12, 0.5, -12)}):Play()
    end
    sliderValLabel.Text = tostring(newVal)
    print("Slider:", newVal)
end
local function percentFromX(x)
    local absPos = sliderBar.AbsolutePosition.X
    local absSize = sliderBar.AbsoluteSize.X
    return absSize > 0 and math.clamp((x - absPos) / absSize, 0, 1) or 0
end
sliderThumb.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        setSlider(percentFromX(input.Position.X), true)
        dragging = true
    end
end)
sliderThumb.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = false
    end
end)
sliderBar.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        setSlider(percentFromX(input.Position.X), true)
        dragging = true
    end
end)
sliderBar.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = false
    end
end)
UserInputService.InputChanged:Connect(function(input)
    if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
        setSlider(percentFromX(input.Position.X), false)
    end
end)
sliderRow.TouchTap:Connect(function(tps)
    if tps and #tps > 0 then
        setSlider(percentFromX(tps[1].X), true)
    end
end)
setSlider(0.5, true)

-- Dropdown
local dropRow = Instance.new("Frame")
dropRow.Size = UDim2.new(1, -44, 0, 46)
dropRow.BackgroundTransparency = 1
dropRow.Parent = main

local dropLabel = Instance.new("TextLabel")
dropLabel.Size = UDim2.new(0.5, 0, 1, 0)
dropLabel.BackgroundTransparency = 1
dropLabel.Text = "Fruit"
dropLabel.Font = Enum.Font.Bangers
dropLabel.TextSize = 28
dropLabel.TextColor3 = themes.Dark.text
dropLabel.TextXAlignment = Enum.TextXAlignment.Left
dropLabel.Parent = dropRow

local dropBtn = Instance.new("TextButton")
dropBtn.Size = UDim2.new(0, 132, 0, 36)
dropBtn.Position = UDim2.new(1, -140, 0.5, -18)
dropBtn.BackgroundColor3 = themes.Dark.bar
dropBtn.Text = "Select..."
dropBtn.Font = Enum.Font.Bangers
dropBtn.TextSize = 22
dropBtn.TextColor3 = themes.Dark.text
dropBtn.TextXAlignment = Enum.TextXAlignment.Left
dropBtn.Parent = dropRow
roundify(dropBtn, UDim.new(0,8))

local dropListFrame = Instance.new("Frame")
dropListFrame.Size = UDim2.new(1,0,0,3*28)
dropListFrame.Position = UDim2.new(0,0,1,2)
dropListFrame.BackgroundColor3 = themes.Dark.content
dropListFrame.Visible = false
dropListFrame.Parent = dropBtn
dropListFrame.ZIndex = 50
roundify(dropListFrame, UDim.new(0,8))

local dropList = {"Apple","Banana","Cherry"}
local ul2 = Instance.new("UIListLayout", dropListFrame)
ul2.SortOrder = Enum.SortOrder.LayoutOrder
ul2.Padding = UDim.new(0,2)

for _, fruit in ipairs(dropList) do
    local opt = Instance.new("TextButton")
    opt.Size = UDim2.new(1,0,0,26)
    opt.BackgroundColor3 = themes.Dark.accent
    opt.Text = fruit
    opt.Font = Enum.Font.Bangers
    opt.TextSize = 20
    opt.TextColor3 = themes.Dark.text
    opt.Parent = dropListFrame
    roundify(opt, UDim.new(0,8))
    opt.MouseButton1Click:Connect(function()
        dropBtn.Text = fruit
        dropListFrame.Visible = false
        print("Dropdown chose:", fruit)
    end)
    opt.TouchTap:Connect(function()
        opt.MouseButton1Click:Fire()
    end)
end
dropBtn.MouseButton1Click:Connect(function()
    dropListFrame.Visible = not dropListFrame.Visible
end)
dropBtn.TouchTap:Connect(function()
    dropListFrame.Visible = not dropListFrame.Visible
end)
dropBtn.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.Touch then
        dropListFrame.Visible = not dropListFrame.Visible
    end
end)
dropBtn.MouseLeave:Connect(function() dropListFrame.Visible = false end)

-- Textbox
local txtRow = Instance.new("Frame")
txtRow.Size = UDim2.new(1, -44, 0, 46)
txtRow.BackgroundTransparency = 1
txtRow.Parent = main

local txtLabel = Instance.new("TextLabel")
txtLabel.Size = UDim2.new(0.5, 0, 1, 0)
txtLabel.BackgroundTransparency = 1
txtLabel.Text = "Say"
txtLabel.Font = Enum.Font.Bangers
txtLabel.TextSize = 28
txtLabel.TextColor3 = themes.Dark.text
txtLabel.TextXAlignment = Enum.TextXAlignment.Left
txtLabel.Parent = txtRow

local txtBox = Instance.new("TextBox")
txtBox.Size = UDim2.new(0,132,0,36)
txtBox.Position = UDim2.new(1, -140, 0.5, -18)
txtBox.BackgroundColor3 = themes.Dark.bar
txtBox.Text = ""
txtBox.PlaceholderText = "Type here..."
txtBox.Font = Enum.Font.Bangers
txtBox.TextSize = 22
txtBox.TextColor3 = themes.Dark.text
txtBox.PlaceholderColor3 = themes.Dark.label
txtBox.ClearTextOnFocus = false
txtBox.Parent = txtRow
roundify(txtBox, UDim.new(0,8))
txtBox.TouchTap:Connect(function() txtBox:CaptureFocus() end)
txtBox.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.Touch then txtBox:CaptureFocus() end
end)
txtBox.FocusLost:Connect(function(enterPressed)
    if enterPressed or UserInputService.TouchEnabled then
        print("Typed:", txtBox.Text)
    end
end)
