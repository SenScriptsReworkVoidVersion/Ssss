-- UltraMirror UI Library (PC + Mobile)
-- Full rebuilt library

local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local LocalPlayer = Players.LocalPlayer
local playerGui = LocalPlayer:WaitForChild("PlayerGui")

local LIB = {}
LIB.__index = LIB

-- Roundify helper
local function roundify(obj, radius)
    local c = Instance.new("UICorner")
    c.CornerRadius = radius or UDim.new(0, 8)
    c.Parent = obj
end

-- Draggable helper
local function draggable(frame, handle)
    local dragging, dragStart, startPos
    handle.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            dragStart = input.Position
            startPos = frame.Position
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)
    handle.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
            if dragging then
                local delta = input.Position - dragStart
                frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
            end
        end
    end)
end

-- Create Window
function LIB:CreateWindow(title, subtitle, version)
    local sg = Instance.new("ScreenGui", playerGui)
    sg.Name = "UltraMirrorUI"
    sg.ResetOnSpawn = false

    local main = Instance.new("Frame")
    main.Size = UDim2.new(0, 500, 0, 350)
    main.Position = UDim2.new(0.5, -250, 0.5, -175)
    main.BackgroundColor3 = Color3.fromRGB(30, 30, 40)
    main.Parent = sg
    roundify(main)

    -- Title bar
    local bar = Instance.new("Frame", main)
    bar.Size = UDim2.new(1,0,0,40)
    bar.BackgroundColor3 = Color3.fromRGB(40,40,55)
    roundify(bar)

    local label = Instance.new("TextLabel", bar)
    label.Size = UDim2.new(1,-10,1,0)
    label.Position = UDim2.new(0,10,0,0)
    label.BackgroundTransparency = 1
    label.Font = Enum.Font.GothamBold
    label.Text = title or "UltraMirror"
    label.TextSize = 18
    label.TextColor3 = Color3.fromRGB(255,180,180)
    label.TextXAlignment = Enum.TextXAlignment.Left

    -- Sidebar
    local sidebar = Instance.new("Frame", main)
    sidebar.Size = UDim2.new(0,120,1,-40)
    sidebar.Position = UDim2.new(0,0,0,40)
    sidebar.BackgroundColor3 = Color3.fromRGB(35,35,50)
    roundify(sidebar)

    local sidebarList = Instance.new("UIListLayout", sidebar)
    sidebarList.SortOrder = Enum.SortOrder.LayoutOrder
    sidebarList.Padding = UDim.new(0,5)

    -- Content
    local content = Instance.new("Frame", main)
    content.Size = UDim2.new(1,-130,1,-50)
    content.Position = UDim2.new(0,130,0,50)
    content.BackgroundColor3 = Color3.fromRGB(25,25,35)
    roundify(content)

    local tabFrames = {}
    local sidebarButtons = {}

    function LIB:CreateTab(tabName)
        local btn = Instance.new("TextButton", sidebar)
        btn.Size = UDim2.new(1,-10,0,30)
        btn.Text = tabName
        btn.Font = Enum.Font.GothamBold
        btn.TextSize = 14
        btn.TextColor3 = Color3.fromRGB(255,255,255)
        btn.BackgroundColor3 = Color3.fromRGB(60,60,90)
        roundify(btn)

        local tab = Instance.new("ScrollingFrame", content)
        tab.Size = UDim2.new(1,0,1,0)
        tab.BackgroundTransparency = 1
        tab.Visible = false
        tab.AutomaticCanvasSize = Enum.AutomaticSize.Y
        tab.ScrollBarThickness = 6

        local layout = Instance.new("UIListLayout", tab)
        layout.Padding = UDim.new(0,5)

        tabFrames[tabName] = tab
        table.insert(sidebarButtons, btn)

        local function select()
            for _, f in pairs(tabFrames) do f.Visible = false end
            for _, b in pairs(sidebarButtons) do b.BackgroundColor3 = Color3.fromRGB(60,60,90) end
            tab.Visible = true
            btn.BackgroundColor3 = Color3.fromRGB(100,100,150)
        end
        btn.MouseButton1Click:Connect(select)
        btn.TouchTap:Connect(select)
        if #sidebarButtons == 1 then select() end

        local TAB = {}

        function TAB:Section(txt)
            local l = Instance.new("TextLabel", tab)
            l.Size = UDim2.new(1,-10,0,26)
            l.BackgroundTransparency = 1
            l.Font = Enum.Font.GothamBold
            l.Text = txt
            l.TextColor3 = Color3.fromRGB(120,180,255)
            l.TextSize = 16
            l.TextXAlignment = Enum.TextXAlignment.Left
        end

        function TAB:Button(name, cb)
            local b = Instance.new("TextButton", tab)
            b.Size = UDim2.new(1,-10,0,32)
            b.BackgroundColor3 = Color3.fromRGB(90,110,255)
            b.Text = name
            b.Font = Enum.Font.GothamBold
            b.TextSize = 14
            b.TextColor3 = Color3.new(1,1,1)
            roundify(b)
            b.MouseButton1Click:Connect(function() if cb then cb() end end)
            b.TouchTap:Connect(function() if cb then cb() end end)
        end

        function TAB:Toggle(name, cb)
            local holder = Instance.new("Frame", tab)
            holder.Size = UDim2.new(1,-10,0,32)
            holder.BackgroundTransparency = 1

            local label = Instance.new("TextLabel", holder)
            label.Size = UDim2.new(0.7,0,1,0)
            label.BackgroundTransparency = 1
            label.Font = Enum.Font.GothamBold
            label.Text = name
            label.TextSize = 14
            label.TextColor3 = Color3.new(1,1,1)
            label.TextXAlignment = Enum.TextXAlignment.Left

            local btn = Instance.new("TextButton", holder)
            btn.Size = UDim2.new(0,50,0,22)
            btn.Position = UDim2.new(1,-60,0.5,-11)
            btn.BackgroundColor3 = Color3.fromRGB(80,80,110)
            btn.Text = ""
            roundify(btn, UDim.new(1,0))

            local circ = Instance.new("Frame", btn)
            circ.Size = UDim2.new(0,18,0,18)
            circ.Position = UDim2.new(0,2,0.5,-9)
            circ.BackgroundColor3 = Color3.new(1,1,1)
            roundify(circ, UDim.new(1,0))

            local on = false
            local function update()
                if on then
                    TweenService:Create(btn,TweenInfo.new(0.2),{BackgroundColor3=Color3.fromRGB(60,170,90)}):Play()
                    TweenService:Create(circ,TweenInfo.new(0.2),{Position=UDim2.new(1,-20,0.5,-9)}):Play()
                else
                    TweenService:Create(btn,TweenInfo.new(0.2),{BackgroundColor3=Color3.fromRGB(80,80,110)}):Play()
                    TweenService:Create(circ,TweenInfo.new(0.2),{Position=UDim2.new(0,2,0.5,-9)}):Play()
                end
            end
            btn.MouseButton1Click:Connect(function()
                on = not on
                update()
                if cb then cb(on) end
            end)
            btn.TouchTap:Connect(function()
                on = not on
                update()
                if cb then cb(on) end
            end)
            update()
        end

        -- (Slider, Dropdown, Textbox same as before...)

        return TAB
    end

    return setmetatable({}, {__index = LIB})
end

return setmetatable(LIB, LIB)
